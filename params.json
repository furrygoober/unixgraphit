{"name":"Unixgraphit","tagline":"Graphing text based data","body":"# Unixgraphit\r\n###### Quick and dirty graphing of text based data.\r\n\r\nI am primarily a UNIX system admin, with some questionable scripting skills. \r\nThe main goals for writing this script were to learn, have fun, and help troubleshoot issues at work.\r\nHopefully a few other people out there may find this script useful.\r\n\r\nDue to environmental limitations the requirements are limited to: Python Standard Library + python matplotlib library.\r\n\r\nYou should be able to throw a wide range of text base numbers at this thing and get some graphs. (mpstat, vmstat, iostat, nicstat, prstat, pidstat, fsstat, intrstat, sar, etc)\r\n\r\nThe detailed labels file (labels.txt) is very limited, maybe someday I'll expand it.\r\n\r\nIf anyone takes up the mantel and does any fixes/additions to the script please let me know where to grab the improved files :)\r\n\r\n### Options\r\n```\r\nusage: unix_graphit.py [-h] [-v] [-t] -of OUTFILE [-if INFILE] [-l LABELFILE]\r\n                       [-q] [-d] [-c] [-F FIELD] [-ds DATESTRING]\r\n                       [-df DATEFORMAT]\r\n\r\nProcess and plot text data. (ie: output from sysstat utils)\r\n\r\noptional arguments:\r\n  -h, --help            show this help message and exit\r\n  -v, --version         show program's version number and exit\r\n  -t, --transpose       Used to transpose data, example data type: intrstat\r\n  -of OUTFILE, --outfile OUTFILE\r\n                        Name of the pdf to store the graph(s) in\r\n  -if INFILE, --infile INFILE\r\n                        Name of the file to load stat data from\r\n  -l LABELFILE, --labelfile LABELFILE\r\n                        Name of file to load more detailed graph labels\r\n  -q, --quiet           Supress log output\r\n  -d, --debug           Increase log verbosity\r\n  -c, --customy         NOT IMPLEMENTED: Plot custom y function\r\n  -F FIELD, --field FIELD\r\n                        Data field separator. Default is white space\r\n  -ds DATESTRING, --datestring DATESTRING\r\n                        String to use to import dates. Default: %H:%M:%S\r\n                        Options: %Y: YYYY, %y: YY, %m: MM, %d: DD, %H, %M, %S\r\n  -df DATEFORMAT, --dateformat DATEFORMAT\r\n                        String to use to display dates on the graphs, defaults\r\n                        to datestring\r\n```\r\n### Caveats\r\n- When using data like mpstat (or any data) make sure all sections of data are complete, or it will spit out a bunch of errors about x and y not matching. ie. If your system has 24 cpus, make sure the last section of the mpstat data has lines for all 24 cpus.\r\n- stuff\r\n\r\n## Example output\r\n##### sysperf\r\nhttps://github.com/furrygoober/unixgraphit/files/29448/sysperf.pdf\r\n##### mpstat\r\nhttps://github.com/furrygoober/unixgraphit/files/29449/mpstat.pdf\r\n##### vmstat\r\nhttps://github.com/furrygoober/unixgraphit/files/29450/vmstat.pdf\r\n\r\n### Usage\r\n##### Example: via unix shell piping vmstat output to the script and save the output\r\n```\r\ncat vmstat.data.txt | ./unix_graphit.py -of vmstat.pdf\r\n\r\n...\r\nLine: 1\r\n['r', 'b', 'w', 'swap', 'free', 're', 'mf', 'pi', 'po', 'fr', 'de', 'sr', 's0', 's1', 's3', 's4', 'in', 'sy', 'cs', 'us', 'sy', 'id']\r\n\r\nLine: 2\r\n[5.0, 0.0, 0.0, 7779448.0, 8687968.0, 136.0, 1110.0, 64.0, 92.0, 98.0, 0.0, 2025.0, 97.0, -0.0, 68.0, 7.0, 17119.0, 30322.0, 19241.0, 18.0, 6.0, 76.0]\r\n\r\n\r\nSelect line number of header row: 1\r\n\r\nSelect line number of data row: 2\r\n\r\n...\r\nField: 21: id\r\nField: 22: Interval: each line is a new data sample\r\n\r\n\r\nSelect x axis. (ie: Date, or Interval): 22\r\n\r\nSelect multi-item x axis field # (ie: mpstat: CPU) or n/N for none: n\r\n\r\nSelect y axis numbers NOT to graph seperated by a space: ['22', 'n']\r\n```\r\n\r\n##### Example: load mpstat data from a file, load detailed labels and graph the data\r\n```\r\n./unix_graphit.py -if mpstat.data.txt -of mpstat.pdf -l labels.txt\r\n\r\n...\r\nLine: 0\r\n['Tue', 'Nov', 3.0, '10:00:49', 'EST', 2015.0, 0.0, 88.0, 2.0, 179.0, 1579.0, 583.0, 2156.0, 95.0, 299.0, 968.0, 5.0, 3151.0, 22.0, 6.0, 0.0, 72.0]\r\n\r\nLine: 1\r\n['Tue', 'Nov', 3.0, '10:00:49', 'EST', 2015.0, 'CPU', 'minf', 'mjf', 'xcal', 'intr', 'ithr', 'csw', 'icsw', 'migr', 'smtx', 'srw', 'syscl', 'usr', 'sys', 'wt', 'idl']\r\n\r\nSelect line number of header row: 1\r\n\r\nSelect line number of data row:0\r\n\r\nsolaris10\r\n\r\nSelect OS type:solaris10\r\n\r\nsysperf\r\nmpstat\r\nvmstat\r\n\r\nSelect OS type:mpstat\r\n\r\n\r\nFields from selected header row\r\n\r\nField: 0: Tue\r\nField: 1: Nov\r\nField: 2: 3.0\r\nField: 3: 10:00:49\r\nField: 4: EST\r\nField: 5: 2015.0\r\nField: 6: CPU\r\nField: 7: minf\r\nField: 8: mjf\r\nField: 9: xcal\r\nField: 10: intr\r\nField: 11: ithr\r\nField: 12: csw\r\nField: 13: icsw\r\nField: 14: migr\r\nField: 15: smtx\r\nField: 16: srw\r\nField: 17: syscl\r\nField: 18: usr\r\nField: 19: sys\r\nField: 20: wt\r\nField: 21: idl\r\nField: 22: Interval: each line is a new data sample\r\n\r\nSelect x axis. (ie: Date, or Interval):22\r\n\r\nSelect multi-item x axis field # (ie: mpstat: CPU) or n/N for none: 6\r\n\r\nSelect y axis numbers NOT to graph seperated by a space: ['22', '6'] 0 1 2 3 4 5\r\n```\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}